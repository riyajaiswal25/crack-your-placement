class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        List<Integer> list = new ArrayList<>();
        int colBegin=0, rowBegin=0, colEnd = matrix[0].length-1, rowEnd = matrix.length-1;
        
        while(rowBegin<=rowEnd && colBegin<=colEnd){
            
            //Traverse right
            for(int j=colBegin;j<=colEnd;j++)
                list.add(matrix[rowBegin][j]);
            rowBegin++;
            
            //Traverse down
            for(int j=rowBegin;j<=rowEnd;j++)
                list.add(matrix[j][colEnd]);
            colEnd--;
            
            //Traverse left
            if(rowBegin<=rowEnd){
                for(int j=colEnd;j>=colBegin;j--)
                    list.add(matrix[rowEnd][j]);
                rowEnd--;
            }
            
            //Traverse Up
            if(colBegin<=colEnd){
                for(int j=rowEnd;j>=rowBegin;j--)
                    list.add(matrix[j][colBegin]);
                colBegin++;
            }
        }
        return list;
    }
}
